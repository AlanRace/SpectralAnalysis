[
{
	"uri": "/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": " Standalone Version Currently requires 64-bit Windows. If you are running 32-bit Windows and want a standalone version please contact me (alan.race@uni-bayreuth.de).\n Download and extract the zip file of the latest release Download and install the R2016b (9.1) MATLAB Runtime Download and install the Visual C++ Redistributable for Visual Studio 2015 Run SpectralAnalysis.exe  Source code Version Increase Java Heap Space Prior to running SpectralAnalysis, it is advisable to increase the \u0026lsquo;Java Heap Size\u0026rsquo; allocated to MATLAB to the maximum available. This enables larger imzML files to be opened successfully.\n MATLAB 2010a or later MATLAB 2009b or earlier  Installation  git clone https://github.com/AlanRace/SpectralAnalysis cd SpectralAnalysis git submodule update --init  Or  Download the source code of the latest release Download the latest version of MOOGL and place in the SpectralAnalysis\\src\\gui\\MOOGL folder Open MATLAB and navigate to the folder containing the source code Run the command runSpectralAnalysis  Compatible MATLAB Versions If you use a currently untested version of MATLAB, please let me know any successes (alan.race@uni-bayreuth.de) or issues you encounter (submit issues).\n   MATLAB Version Compatibility Notes     R2016b Compatible    R2016a Compatible    R2015b Compatible    R2015a Compatible    R2014b Compatible    R2014a Compatible    R2013b Untested    R2013a Untested    R2012b Untested    R2012a Untested    R2011b Untested    R2011a Untested    R2010b Untested    R2010a Untested    R2009b Untested    R2009a Untested     "
},
{
	"uri": "/advanced-use/integration/",
	"title": "Integration with MATLAB",
	"tags": [],
	"description": "",
	"content": "When running SpectralAnalysis from within MATLAB (i.e. using the source code version), it is possible to extract data to the workspace for further processing.\n"
},
{
	"uri": "/basic-usage/load-data/",
	"title": "Load data",
	"tags": [],
	"description": "",
	"content": "  Open Data Convert data to SpectralAnalysis format View memory usage interface Progress bar Log of activities that have been and are currently being performed  \nOpening Data When selecting the \u0026lsquo;Open\u0026rsquo; menu, the list of currently implemented parsers will be shown, select the appropriate parser for the type of data to be opened.\nAfter selecting the file to open, the \u0026lsquo;Select Data Representation\u0026rsquo; interface will be shown. This enables loading all data in memory (most memory intensive, fastest processing), loading only a subset of the data (limited spectral range and/or a selected region of interest) into memory or leaving the data on the disk (very little memory consumed, slower processing).\n Select the data representation to use to load the data (this interface is specific to Data In Memory). Optional spectral channel range to impose when loading data. Optionally select a region of interest to load. Default is the entire dataset. Optionally select a method for ensuring a consistent spectral axis. If data is not continuous then a method must be selected or the data will not load. Load data with selected options.  "
},
{
	"uri": "/basic-usage/load-data/parser/",
	"title": "Parser",
	"tags": [],
	"description": "",
	"content": "A parser is something that understands a specific file format and enables the translation and loading of data.\nTo create a parser for a currently unsupported file type, extend the Parser class and add the new class into the same folder.\n"
},
{
	"uri": "/basic-usage/visualisation/",
	"title": "Data visualisation",
	"tags": [],
	"description": "",
	"content": " Feature List  Generate ion image Generate images from list Save image list Generate RGB composite View spectrum Overlay spectra  Overview  Generate a spectral representation Perform data reduction Perform clustering Image List Selected image display  Spectral Zooming  Zooming into a spectrum is performed by click-and-drag below the spectrum axis (see below) Zooming out is performed by double clicking below the spectrum axis  Image Generation When the data is loaded as \u0026lsquo;On Disk\u0026rsquo;, ion images are not automatically generated. As the generation of 10, 20, or even 100 ion images takes approximately the same amount of time when data is on disk, the generation process is only triggered when the user clicks the G button in the Image List, demonstrated in the image below. Once this button is clicked, all images that have not been previously generated (which do not have a tick next to them) in the image list will be generated.\nThere are four ways to add m/z ranges to the Image List:\n Select the range by clicking and dragging above the axis in the spectrum Type the range manually into the Image List, with the minimum and maximum value separated by a hypen (-). Type a centroid value only into the Image List. When the images are generated, SpectralAnalysis will then automatically apply the range (+/-) with the units chosen (either PPM or Da) defined above the Image List. Load a previous list (of either centroid values, or ranges).  "
},
{
	"uri": "/basic-usage/",
	"title": "General Use",
	"tags": [],
	"description": "",
	"content": " Feature List  Load data (mass spectrometry imaging, Raman) Visualise data (generate images, view spectra) Region of interest (generation and statistics) Spectral pre-processing Multivariate analysis (PCA,NMF, pLSA) Clustering Multimodality data analysis  "
},
{
	"uri": "/advanced-use/",
	"title": "Advanced Use",
	"tags": [],
	"description": "",
	"content": "SpectralAnalysis was designed in such a way to enable rapid development and integration of new\n"
},
{
	"uri": "/basic-usage/region-of-interest/",
	"title": "Region of Interest",
	"tags": [],
	"description": "",
	"content": " Regions of interest (ROIs) are areas of an image, which can be used as input into subsequent data analysis. ROIs can be defined manually, as explained in this page, or automatically through processing such as clustering.\nFeature List  Generate ROI Calculate statistics on ROI Export ROIs  Overview The ROI panel can be found on the right on the main interface (number 1 in the image below).\n Region of interest list Save region of interest list Load region of interest list View statistics on ROI Add/edit/delete ROIs  Generate ROI  Pencil Assign individual pixels to the ROI. Line Assign all pixels which fall along a line drawn by the user to the ROI. Rectangle Assign all pixels which fall within a rectangle drawn by the user to the ROI. Ellipse  Poly : Eraser : Threshold Assign all pixels \u0026hellip; (see Threshold section for more details). Move   Threshold Calculate statistics Export ROIs "
},
{
	"uri": "/basic-usage/ensure-consistent-mz-axis/",
	"title": "Ensure consistent m/z axis",
	"tags": [],
	"description": "",
	"content": " Background A common method for reducing the size of the data without discarding information when saving mass spectrometry data is to only store data points where the intensity is greater than zero. This can result in the data points in any two spectra containing different m/z values (for example in one spectrum there may be a peak at 798.55 and therefore a corresponding data point, but in the next spectrum this peak was not detected and therefore this value is not present in the spectrum).\nThis method of storing spectra can cause issues for spectral visualisation, combining spectra (such as calculating an average, or generating a \u0026lsquo;data cube\u0026rsquo;) or performing preprocessing methods (such as smoothing or baseline correction).\n In the case of visualisation it is important that the zeros are replaced. In the case of combining spectra it is important that the spectra are consistent (i.e. that each spectrum has intensity values for exactly the same m/z values). In the case of preprocessing it is important that the m/z values are regularly distributed.  Applying a method in SpectralAnalysis  Select a spectrum by clicking on a pixel in the image.\n Open Preprocessing Workflow Editor by selecting Edit button in Spectral Preprocessing panel.\n Select most appropriate Zero Filling method (see Choosing the most appropriate method section below) and click the adjacent + button.\n Enter desired parameters for the chosen method (if appropriate, and applicable), optionally checking the effect of the zero filling method by zooming into the spectrum and observing the \u0026lsquo;before\u0026rsquo; and \u0026lsquo;after\u0026rsquo; spectra.\n Click OK to close the Edit Preprocesing Method window and then OK again to close the Preprocessing Workflow Editor. The chosen method(s) will now be automatically applied to any viewed spectrum.\n  Choosing the most appropriate method The most appropriate method to use depends on the data and the desired next step in the processing workflow. The methods included in SpectralAnalysis are described below.\n Combine Bins Fixed Point per Peak Interpolation Rebin Interpolation PPM Rebin Interpolation Rebin Orbitrap QSTAR PPM Rebin Rebin Calibration Synapt  Rebin Specify a m/z bin size, and a m/z range. The resulting m/z axis then spans the specified m/z range consisting of equally sized bins. All data points which fall within one of the bins are then added together to generate the resulting spectrum.\nPPM Rebin Specify a PPM bin size, and a m/z range. The resulting m/z axis then spans the specified m/z range consisting of bins of increasing size (each bin has a constant size in PPM, but as PPM is proportional to m/z, the bin size increases as m/z increases). All data points which fall within one of the bins are then added together to generate the resulting spectrum.\nInterpolation Rebin Specify a m/z bin size, and a m/z range. The resulting m/z axis then spans the specified m/z range consisting of equally sized bins. All data points are then interpolated onto the new m/z axis (linear interpolation).\nInterpolation PPM Rebin Specify a PPM bin size, and a m/z range. The resulting m/z axis then spans the specified m/z range consisting of bins of increasing size (each bin has a constant size in PPM, but as PPM is proportional to m/z, the bin size increases as m/z increases). All data points are then interpolated onto the new m/z axis (linear interpolation).\n"
},
{
	"uri": "/basic-usage/spectral-representation/",
	"title": "Spectral Representation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/basic-usage/data-reduction/",
	"title": "Data Reduction",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/basic-usage/clustering/",
	"title": "Clustering",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/basic-usage/load-data/continuous-vs-profile/",
	"title": "Continuous vs Profile",
	"tags": [],
	"description": "",
	"content": "Continuous - data points follow one another across entire spectral range and are consistent for all spectra within the dataset.\nProfile - data stored as [spectral channel, intensity] tuples.\n"
},
{
	"uri": "/basic-usage/load-data/data-representation/",
	"title": "Data Representation",
	"tags": [],
	"description": "",
	"content": "A data representation is a means of accessing data.\n DataInMemory - data is loaded into memory and stored within this class. DataOnDisk - not data is loaded into memory and each access to any portion of the data results in a disk read.  To create a data representation for a currently unsupported style of data access, extend the DataRepresentation class and add the new class into the same folder.\n"
},
{
	"uri": "/advanced-use/extending/",
	"title": "Extending SpectralAnalysis",
	"tags": [],
	"description": "",
	"content": " SpectralAnalysis was written with extensibility in mind. To\nAdding new preprocessing Adding new postprocessing Adding new parsers "
},
{
	"uri": "/basic-usage/visualisation/image-list/",
	"title": "Image List",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/",
	"title": "SpectralAnalysis",
	"tags": [],
	"description": "",
	"content": " SpectralAnalysis Analysis software for spectral imaging data.\nIf you find this useful please cite: Alan M. Race, Andrew D. Palmer, Alex Dexter, Rory T. Steven, Iain B. Styles, and Josephine Bunch, Anal. Chem., 2016, 88 (19), pp 9451–9458. http://dx.doi.org/10.1021/acs.analchem.6b01643\nGet the latest version.\nIf downloading the source, please be aware that the latest version of MOOGL must also be downloaded and included in the SpectralAnalysis\\src\\gui\\MOOGL folder.\nDetails on SpectralAnalysis  Getting Started Basic Use  "
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]