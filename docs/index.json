[{"uri":"/installation/","title":"Installation","tags":[],"description":"","content":"There are two means of installing SpectralAnalysis and you can choose the one that best fits your use case. The standalone version works without requiring a MATLAB licence, however this cannot be modified or make use of any of the \u0026lsquo;advanced\u0026rsquo; functionality. The source code version requires a valid MATLAB licence, however can perform both general and advanced functionality.\nStandalone Version Currently requires 64-bit Windows. If you are running 32-bit Windows and want a standalone version please contact me.\n Download and extract the zip file of the latest release Download and install the R2016b (9.1) MATLAB Runtime Download and install the Visual C++ Redistributable for Visual Studio 2015 Run SpectralAnalysis.exe  Source code Version The source code version requires a valid MATLAB licence.\nInstallation with Git  Clone the repository and initialise the submodules  git clone https://github.com/AlanRace/SpectralAnalysis cd SpectralAnalysis git submodule update --init Open MATLAB and navigate to the folder containing the source code Run the command runSpectralAnalysis  Installation without Git  Download the source code of the latest release Download the latest version of MOOGL and place in the SpectralAnalysis\\src\\gui\\MOOGL folder Open MATLAB and navigate to the folder containing the source code Run the command runSpectralAnalysis  Increase Java Heap Space Prior to running SpectralAnalysis, it is advisable to increase the \u0026lsquo;Java Heap Size\u0026rsquo; allocated to MATLAB to the maximum available. This enables larger imzML files to be opened successfully.\n MATLAB 2010a or later MATLAB 2009b or earlier  Compatible MATLAB Versions If you use a currently untested version of MATLAB, please let us know any successes or issues you encounter (submit issues).\n   MATLAB Version Compatibility Notes     R2014a or newer Compatible    R2013b or older Untested     "},{"uri":"/advanced-use/integration/","title":"Integration with MATLAB","tags":[],"description":"","content":"When running SpectralAnalysis from within MATLAB (i.e. using the source code version), it is possible to extract data to the workspace for further processing.\n"},{"uri":"/basic-usage/load-data/","title":"Load data","tags":[],"description":"","content":" Load Dataset (Open) Convert data to SpectralAnalysis format View memory usage interface Progress bar Log of activities that have been and are currently being performed  Load Dataset (Open) When selecting the \u0026lsquo;Open\u0026rsquo; menu, the list of currently implemented parsers will be shown, select the appropriate parser for the type of data to be opened.\nAfter selecting the file to open, the \u0026lsquo;Select Data Representation\u0026rsquo; interface will be shown. This enables loading all data in memory (most memory intensive, fastest processing), loading only a subset of the data (limited spectral range and/or a selected region of interest) into memory or leaving the data on the disk (very little memory consumed, slower processing).\n Select the data representation to use to load the data (this interface is specific to Data In Memory). Optional spectral channel range to impose when loading data. Optionally select a region of interest to load. Default is the entire dataset. Optionally select a method for ensuring a consistent spectral axis. If data is not continuous then a method must be selected or the data will not load. Load data with selected options.  "},{"uri":"/basic-usage/load-data/parser/","title":"Parser","tags":[],"description":"","content":"A parser is something that understands a specific file format and enables the translation and loading of data. Currently supported data formats are\n imzML the open mass spectrometry imaging format (.imzML)   Advanced Currently supported parsers are\n ImzMLParser (Mass spectrometry imaging data, .imzML) SIMSParser (SIMS data, .tof or .grd)   To create a parser for a currently unsupported file type or style of data, extend the Parser class and add the new class into the same folder.\n"},{"uri":"/basic-usage/visualisation/","title":"Data visualisation","tags":[],"description":"","content":"Feature List  View spectrum Generate ion image Generate images from list Save image list Generate RGB composite View spectrum Overlay spectra  Interface Overview  Generate a spectral representation Perform data reduction Perform clustering Image List panel Selected image display Region of Interest panel Spectrum List panel Selected spectrum display Spectral Preprocessing panel  View Spectrum To view the spectrum associated with a single pixel, simply click on the desired pixel and the spectrum will be displayed in the spectrum display panel.\n Zooming into a spectrum is performed by click-and-drag below the spectrum axis (see below) Zooming out is performed by double clicking below the spectrum axis  Image Generation This section is written to describe generation of images in mass spectrometry imaging (i.e. ion images, where the spectral channels are m/z values), but the same process applies for any spectral imaging data.\n Generation of ion images is performed by selecting one or more m/z limit pairs\nIon images that have been previously generated are marked by a tick (✓) in the \u0026lsquo;Generated\u0026rsquo; column in the Image List panel.\nWhen a dataset is loaded as \u0026lsquo;Data On Disk\u0026rsquo;, ion images are not automatically generated. As the generation of 10, 20, or even 100 ion images takes approximately the same amount of time when data is on disk, the generation process is only triggered when the user clicks the G button in the Image List panel. Once this button is clicked, all images that have not been previously generated (which do not have a tick (✓) next to them) in the image list will be generated.\n Various methods of generation ion images are discussed in the following sections.\nVisually select ion image limits Select the range by clicking and dragging above the axis in the spectrum.\nManually select ion image limits Type the range manually into the Image List, with the minimum and maximum value separated by a hypen (-). Type a centroid value only into the Image List. When the images are generated, SpectralAnalysis will then automatically apply the range (+/-) with the units chosen (either PPM or Da) defined above the Image List.  "},{"uri":"/basic-usage/","title":"General Use","tags":[],"description":"","content":"Feature List  Load spectral imaging data (mass spectrometry imaging, Raman) Visualise spectra and images (generate images, view spectra) Region of interest (generation and statistics) Spectral pre-processing Multivariate analysis (PCA, NMF, pLSA) Clustering Multimodality data analysis  Supported Data Formats  imzML the open mass spectrometry imaging format (.imzML) ION-TOF export (.grd or .tof) ASCII export from Raman spectroscopy (*.txt)  "},{"uri":"/advanced-use/","title":"Advanced Use","tags":[],"description":"","content":"SpectralAnalysis was designed in such a way to enable rapid development and integration of new algorithms (such as preprocessing, multivariate analysis or clustering methods). To facilitate this, it is possible to freely transfer data to a MATLAB workspace and back again. This provides MATLAB proficient users with the option of exporting their data to the workspace and visualisating and further processing in any way they desire.\nIntegration with MATLAB To take advantage of the transfer of data between the MATLAB workspace and SpectralAnalysis, the source code version of SpectralAnalysis must be used.\nExtending SpectralAnalysis "},{"uri":"/basic-usage/region-of-interest/","title":"Region of Interest","tags":[],"description":"","content":"Regions of interest (ROIs) are areas of an image, which can be used as input into subsequent data analysis. ROIs can be defined manually, as explained in this page, or automatically through processing such as clustering.\nFeature List  Generate ROI Calculate statistics on ROI Export ROIs  Overview The ROI panel can be found on the right on the main interface (number 1 in the image below).\n Region of interest list Save region of interest list Load region of interest list View statistics on ROI Add/edit/delete ROIs  Generate ROI To create an ROI manually, the Edit button on the main interface in the ROI panel must be clicked. This then opens the ROI List Editor, shown below, displaying the ion image which was previously active in the main interface.\nTo create a new ROI, first click the + button, and then in the new window, select an ROI name and colour and then click OK. This then adds the new ROI to the list (bottom left in the interface). The highlighted ROI is then displayed on top of the image, and any selected tool (defined below) can then be applied directly to the image by clicking and/or dragging.\n Pencil Assign individual pixels to the ROI. Line Assign all pixels which fall along a line drawn by the user to the ROI. Rectangle Assign all pixels which fall within a rectangle drawn by the user to the ROI. Ellipse Assign all pixels which fall within an ellipse drawn by the user. Poly Define an arbitrary shape . Eraser Toggle button. When active, use any shape to define an area to remove from the current region of interest. When deactivated, areas are added to the ROI. Threshold Assign all pixels based on thresholds applied (see Threshold for more details). Move Allows dragging of the ROI to a new location.  Threshold Calculate statistics Export ROIs "},{"uri":"/tutorials/","title":"Tutorials","tags":[],"description":"","content":""},{"uri":"/basic-usage/ensure-consistent-mz-axis/","title":"Ensure consistent m/z axis","tags":[],"description":"","content":"Background A common method for reducing the size of the data without discarding information when saving mass spectrometry data is to only store data points where the intensity is greater than zero. This can result in the data points in any two spectra containing different m/z values (for example in one spectrum there may be a peak at 798.55 and therefore a corresponding data point, but in the next spectrum this peak was not detected and therefore this value is not present in the spectrum).\nThis method of storing spectra can cause issues for spectral visualisation, combining spectra (such as calculating an average, or generating a \u0026lsquo;data cube\u0026rsquo;) or performing preprocessing methods (such as smoothing or baseline correction).\n In the case of visualisation it is important that the zeros are replaced. In the case of combining spectra it is important that the spectra are consistent (i.e. that each spectrum has intensity values for exactly the same m/z values). In the case of preprocessing it is important that the m/z values are regularly distributed.  Applying a method in SpectralAnalysis  Select a spectrum by clicking on a pixel in the image. Open Preprocessing Workflow Editor by selecting Edit button in Spectral Preprocessing panel. Select most appropriate Zero Filling method (see Choosing the most appropriate method section below) and click the adjacent + button. Enter desired parameters for the chosen method (if appropriate, and applicable), optionally checking the effect of the zero filling method by zooming into the spectrum and observing the \u0026lsquo;before\u0026rsquo; and \u0026lsquo;after\u0026rsquo; spectra. Click OK to close the Edit Preprocesing Method window and then OK again to close the Preprocessing Workflow Editor. The chosen method(s) will now be automatically applied to any viewed spectrum.  Choosing the most appropriate method The most appropriate method to use depends on the data and the desired next step in the processing workflow. The methods included in SpectralAnalysis are described below.\n Combine Bins Fixed Point per Peak Interpolation Rebin Interpolation PPM Rebin Interpolation Rebin Orbitrap QSTAR PPM Rebin Rebin Calibration Synapt  Rebin Specify a m/z bin size, and a m/z range. The resulting m/z axis then spans the specified m/z range consisting of equally sized bins. All data points which fall within one of the bins are then added together to generate the resulting spectrum.\nPPM Rebin Specify a PPM bin size, and a m/z range. The resulting m/z axis then spans the specified m/z range consisting of bins of increasing size (each bin has a constant size in PPM, but as PPM is proportional to m/z, the bin size increases as m/z increases). All data points which fall within one of the bins are then added together to generate the resulting spectrum.\nInterpolation Rebin Specify a m/z bin size, and a m/z range. The resulting m/z axis then spans the specified m/z range consisting of equally sized bins. All data points are then interpolated onto the new m/z axis (linear interpolation).\nInterpolation PPM Rebin Specify a PPM bin size, and a m/z range. The resulting m/z axis then spans the specified m/z range consisting of bins of increasing size (each bin has a constant size in PPM, but as PPM is proportional to m/z, the bin size increases as m/z increases). All data points are then interpolated onto the new m/z axis (linear interpolation).\n   "},{"uri":"/basic-usage/preprocessing/","title":"Spectral Preprocessing","tags":[],"description":"","content":"Appropriate spectral preprocessing can have a significant impact on the subsequently visualised data and output from more advanced techniques such as multivariate anlaysis and machine learning.\n"},{"uri":"/basic-usage/spectral-representation/","title":"Spectral Representation","tags":[],"description":"","content":""},{"uri":"/basic-usage/data-reduction/","title":"Data Reduction","tags":[],"description":"","content":""},{"uri":"/basic-usage/multivariate/","title":"Multivariate analysis","tags":[],"description":"","content":"Multivariate analysis\n"},{"uri":"/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/basic-usage/clustering/","title":"Clustering","tags":[],"description":"","content":""},{"uri":"/basic-usage/load-data/continuous-vs-profile/","title":"Continuous vs Profile","tags":[],"description":"","content":"The continuous and profile terminology are taken from imzML and are therefore primarily used in reference to mass spectrometry imaging data. Despite the nomenculature, continuous data does not necessarily mean that the data points are a continuum and profile data may be used to store peak picked data.\nContinuous data points are consistent for all spectra within the dataset. A single, global, array of spectral channels is stored once in the dataset. Each spectrum then simply stores the corresponding intensity array\nProfile data stored as [spectral channel, intensity] pairs per spectrum. Each spectrum can therefore have a different length.\n"},{"uri":"/basic-usage/load-data/data-representation/","title":"Data Representation","tags":[],"description":"","content":"A data representation is a means of accessing data. Currently two general data representations are implemented DataInMemory and DataOnDisk.\nDataInMemory data is loaded into memory on initialisation, resulting in faster processing of data at the cost of RAM.\nDataOnDisk only the metadata is loaded into memory, with data being accessed from the disk only when needed. This is slower than DataInMemory but allows processing of datasets much larger than the available RAM.\n Advanced To create a data representation for a currently unsupported style of data access, the DataRepresentation class should be extended and the new class added into the same folder.\n"},{"uri":"/advanced-use/extending/","title":"Extending SpectralAnalysis","tags":[],"description":"","content":"SpectralAnalysis was written with extensibility in mind. To\nAdding new preprocessing Adding new postprocessing Adding new parsers "},{"uri":"/basic-usage/visualisation/image-list/","title":"Image List","tags":[],"description":"","content":""},{"uri":"/basic-usage/preprocessing/normalisation/","title":"Normalisation","tags":[],"description":"","content":"Background The goal of normalisation is to scale the intensities of each pixel to remove systematic artefacts that affect intensity. For further reading on normalisation methods there are a number of articles that discuss this further\n Normalization in MALDI-TOF imaging datasets of proteins: practical considerations Robust data processing and normalization strategy for MALDI mass spectrometric imaging Exploring Ion Suppression in Mass Spectrometry Imaging of a Heterogeneous Tissue  Applying a method in SpectralAnalysis  Select a spectrum by clicking on a pixel in the image. Open Preprocessing Workflow Editor by selecting Edit button in Spectral Preprocessing panel. Select most appropriate Normalisation method (see Choosing the most appropriate method section below) and click the adjacent + button. Enter desired parameters for the chosen method (if appropriate, and applicable), optionally checking the effect of the zero filling method by zooming into the spectrum and observing the \u0026lsquo;before\u0026rsquo; and \u0026lsquo;after\u0026rsquo; spectra. Click OK to close the Edit Preprocesing Method window and then OK again to close the Preprocessing Workflow Editor. The chosen method(s) will now be automatically applied to any viewed spectrum.  Choosing the most appropriate method Choosing an appropriate normalisation method is challenging and depends on the artefacts that need to be removed. The methods included in SpectralAnalysis are described below.\n l2normalisation Median intensity normalisation Noise level normalisation p-norm normalisation Root mean square normalisation TIC normalisation  l2normalisation This method normalises the data such that the sum of the squares of each spectrum will always be add up to 1\nMedian intensity normalisation This normalises by dividing the intensities of each spectrum by the median intensity for that spectrum. In some datasets (particularly protein imaging) this is an estimation of the baseline of the data.\nNoise level normalisation This method aims to estimate the noise level in the dataset using the method described by Deininger et al. and normalises to this. This assumes that the noise in the data should be constant.\np-norm normalisation p-norm is a generalisable variation on the l2normalisation where the sum of the power p specified by the user adds up to 1. In the case where p = 2, this is equivalent to the l2norm, and p=1 is equivalent to the TIC norm\nRoot mean square normalisation Root mean square normalisation scales the intensities to the square root of the the arithmetic mean of the squares of the intensities for each spectrum.\nTIC normalisation This method scales the intensities of each spectrum such that they sum to 1. This method assumes that each spectrum should have the same total number of ion present.\n   "},{"uri":"/","title":"SpectralAnalysis","tags":[],"description":"","content":"SpectralAnalysis SpectralAnalysis is analysis software for spectral imaging data, with a particular focus on mass spectrometry imaging data. SpectralAnalysis provides functionality for data visualisation, preprocessing, univariate statistics and multivariate analysis.\n Download   Get the latest standalone version.\n  Get the latest source code.\n  If downloading the source, please be aware that the latest version of MOOGL must also be downloaded and included in the SpectralAnalysis\\src\\gui\\MOOGL folder.\n"},{"uri":"/tags/","title":"Tags","tags":[],"description":"","content":""}]