<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials and example data on SpectralAnalysis: Software for the masses</title><link>/tutorials/</link><description>Recent content in Tutorials and example data on SpectralAnalysis: Software for the masses</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Scripting - datacube / kmeans</title><link>/tutorials/taylor-workflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/tutorials/taylor-workflow/</guid><description>This script was originally written by Adam Taylor and can be used to automatically generate a mean spectrum, detect peaks, reduce the data to the peaks with signal-to-noise greater than 3, perform k-means clustering (k = 2) on the reduced data, generate mean spectra for each cluster and then save out all variables.
This script demonstrates how SpectralAnalysis can be used without the interface to perform more complex and automatable analysis routines.</description></item><item><title>Using SpectralAnalysis in python</title><link>/tutorials/using-python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/tutorials/using-python/</guid><description>Install MATLAB Install Python version 3.7 Install MATLAB Engine for Python import matlab.engine print(&amp;#34;Starting MATLAB Engine. This may take a couple of seconds.&amp;#34;); eng = matlab.engine.start_matlab() print(&amp;#34;MATLAB Engine started.&amp;#34;) # Add SpectralAnalysis to MATLAB path eng.addpath(eng.genpath(r&amp;#34;C:\\Path\\To\\SpectralAnalysis&amp;#34;)) # Add Java libraries to MATLAB path eng.addJARsToClassPath(nargout=0) # Load in the example data using ImzMLParser mouseBrain = eng.ImzMLParser(r&amp;#34;C:\\Path\\To\\SpectralAnalysis\\example-data\\mouse-brain\\MouseBrainCerebellum.imzML&amp;#34;) eng.parse(mouseBrain, nargout=0) # Get the image parameters width = eng.getWidth(mouseBrain) height = eng.getHeight(mouseBrain) # Get the spectrum at position (1, 1) firstSpectrum = eng.</description></item></channel></rss>