<deployment-project plugin="plugin.ezdeploy" plugin-version="1.0">
  <configuration build-checksum="1423755864" file="/home/alan/Documents/GitProjects/SpectralAnalysis/deploy/SpectralAnalysis_Linux_StandaloneWithInstaller.prj" location="/home/alan/Documents/GitProjects/SpectralAnalysis/deploy" name="SpectralAnalysis_Linux_StandaloneWithInstaller" preferred-package-location="/home/alan/Documents/GitProjects/SpectralAnalysis/deploy/SpectralAnalysis_Linux_StandaloneWithInstaller/for_redistribution" preferred-package-type="package.type.install" target="target.ezdeploy.standalone" target-name="Application Compiler">
    <param.appname>SpectralAnalysis</param.appname>
    <param.icon />
    <param.icons />
    <param.version>1.4</param.version>
    <param.authnamewatermark>Alan Race</param.authnamewatermark>
    <param.email>alan.race@uni-marburg.de</param.email>
    <param.company>Alan Race</param.company>
    <param.summary>Software for the analysis and interactive exploration of spectral imaging data.</param.summary>
    <param.description>Software for the analysis and interactive exploration of spectral imaging data (such as mass spectrometry imaging and Raman spectroscopy mapping), including visualisation of both images and spectra, preprocessing, multivariate analysis and machine learning.</param.description>
    <param.screenshot />
    <param.guid />
    <param.installpath.string>/SpectralAnalysis/</param.installpath.string>
    <param.installpath.combo>option.installpath.userlocal</param.installpath.combo>
    <param.logo>/home/alan/Documents/GitProjects/SpectralAnalysis/docs-src/static/images/SpectralAnalysis_logo_nobg.png</param.logo>
    <param.install.notes />
    <param.target.install.notes>In the following directions, replace MR/v98 by the directory on the target machine where MATLAB is installed, or MR by the directory where the MATLAB Runtime is installed.

(1) Set the environment variable XAPPLRESDIR to this value:

MR/v98/X11/app-defaults


(2) If the environment variable LD_LIBRARY_PATH is undefined, set it to the following:

MR/v98/runtime/glnxa64:MR/v98/bin/glnxa64:MR/v98/sys/os/glnxa64:MR/v98/sys/opengl/lib/glnxa64

If it is defined, set it to the following:

${LD_LIBRARY_PATH}:MR/v98/runtime/glnxa64:MR/v98/bin/glnxa64:MR/v98/sys/os/glnxa64:MR/v98/sys/opengl/lib/glnxa64</param.target.install.notes>
    <param.intermediate>${PROJECT_ROOT}/SpectralAnalysis_Linux_StandaloneWithInstaller/for_testing</param.intermediate>
    <param.files.only>${PROJECT_ROOT}/SpectralAnalysis_Linux_StandaloneWithInstaller/for_redistribution_files_only</param.files.only>
    <param.output>${PROJECT_ROOT}/SpectralAnalysis_Linux_StandaloneWithInstaller/for_redistribution</param.output>
    <param.logdir>${PROJECT_ROOT}/SpectralAnalysis_Linux_StandaloneWithInstaller</param.logdir>
    <param.enable.clean.build>false</param.enable.clean.build>
    <param.user.defined.mcr.options />
    <param.target.type>subtarget.standalone</param.target.type>
    <param.support.packages />
    <param.web.mcr>true</param.web.mcr>
    <param.package.mcr>false</param.package.mcr>
    <param.no.mcr>false</param.no.mcr>
    <param.web.mcr.name>SpectralAnalysisInstaller_web</param.web.mcr.name>
    <param.package.mcr.name>MyAppInstaller_mcr</param.package.mcr.name>
    <param.no.mcr.name>MyAppInstaller_app</param.no.mcr.name>
    <param.windows.command.prompt>false</param.windows.command.prompt>
    <param.create.log>false</param.create.log>
    <param.log.file />
    <param.native.matlab>false</param.native.matlab>
    <param.checkbox>false</param.checkbox>
    <param.example />
    <param.help.text>Syntax 
	  -? 
	 
 Input Arguments 
	 -?  print help on how to use the application 
	 input arguments</param.help.text>
    <unset>
      <param.icon />
      <param.icons />
      <param.screenshot />
      <param.guid />
      <param.install.notes />
      <param.intermediate />
      <param.files.only />
      <param.output />
      <param.logdir />
      <param.enable.clean.build />
      <param.target.type />
      <param.support.packages />
      <param.web.mcr />
      <param.package.mcr />
      <param.no.mcr />
      <param.package.mcr.name />
      <param.no.mcr.name />
      <param.windows.command.prompt />
      <param.create.log />
      <param.log.file />
      <param.native.matlab />
      <param.checkbox />
      <param.example />
    </unset>
    <fileset.main>
      <file>/home/alan/Documents/GitProjects/SpectralAnalysis/SpectralAnalysis.m</file>
    </fileset.main>
    <fileset.resources>
      <file>/home/alan/Documents/GitProjects/SpectralAnalysis/files</file>
      <file>/home/alan/Documents/GitProjects/SpectralAnalysis/lib</file>
      <file>/home/alan/Documents/GitProjects/SpectralAnalysis/src</file>
      <file>/home/alan/Documents/GitProjects/SpectralAnalysis/version.txt</file>
    </fileset.resources>
    <fileset.package />
    <fileset.depfun>
      <file>${MATLAB_ROOT}/examples/slcheck/data/data.mat</file>
    </fileset.depfun>
    <build-deliverables>
      <file location="${PROJECT_ROOT}/SpectralAnalysis_Linux_StandaloneWithInstaller/for_testing" name="run_SpectralAnalysis.sh" optional="false">/home/alan/Documents/GitProjects/SpectralAnalysis/deploy/SpectralAnalysis_Linux_StandaloneWithInstaller/for_testing/run_SpectralAnalysis.sh</file>
      <file location="${PROJECT_ROOT}/SpectralAnalysis_Linux_StandaloneWithInstaller/for_testing" name="readme.txt" optional="true">/home/alan/Documents/GitProjects/SpectralAnalysis/deploy/SpectralAnalysis_Linux_StandaloneWithInstaller/for_testing/readme.txt</file>
      <file location="${PROJECT_ROOT}/SpectralAnalysis_Linux_StandaloneWithInstaller/for_testing" name="SpectralAnalysis" optional="false">/home/alan/Documents/GitProjects/SpectralAnalysis/deploy/SpectralAnalysis_Linux_StandaloneWithInstaller/for_testing/SpectralAnalysis</file>
      <file location="${PROJECT_ROOT}/SpectralAnalysis_Linux_StandaloneWithInstaller/for_testing" name="splash.png" optional="false">/home/alan/Documents/GitProjects/SpectralAnalysis/deploy/SpectralAnalysis_Linux_StandaloneWithInstaller/for_testing/splash.png</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>/usr/local/MATLAB/R2020a</root>
      <toolboxes>
        <toolbox name="matlabcoder" />
        <toolbox name="embeddedcoder" />
        <toolbox name="gpucoder" />
        <toolbox name="fixedpoint" />
        <toolbox name="matlabhdlcoder" />
        <toolbox name="neuralnetwork" />
      </toolboxes>
      <toolbox>
        <matlabcoder>
          <enabled>true</enabled>
        </matlabcoder>
      </toolbox>
      <toolbox>
        <embeddedcoder>
          <enabled>true</enabled>
        </embeddedcoder>
      </toolbox>
      <toolbox>
        <gpucoder>
          <enabled>true</enabled>
        </gpucoder>
      </toolbox>
      <toolbox>
        <fixedpoint>
          <enabled>true</enabled>
        </fixedpoint>
      </toolbox>
      <toolbox>
        <matlabhdlcoder>
          <enabled>true</enabled>
        </matlabhdlcoder>
      </toolbox>
      <toolbox>
        <neuralnetwork>
          <enabled>true</enabled>
        </neuralnetwork>
      </toolbox>
    </matlab>
    <platform>
      <unix>true</unix>
      <mac>false</mac>
      <windows>false</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>true</linux>
      <solaris>false</solaris>
      <osver>5.4.0-42-generic</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>glnxa64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>